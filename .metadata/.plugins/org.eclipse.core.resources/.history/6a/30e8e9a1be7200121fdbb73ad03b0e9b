package com.game;

import com.data.DataClass;
import com.vectorone.R;
import com.vectorone.R.id;
import com.vectorone.R.layout;

import android.app.Activity;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.text.method.ScrollingMovementMethod;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.CheckBox;
import android.widget.TextView;

public class GameActivity extends Activity {

	private int numberoflights = 12;
	private CheckBox[] lights = new CheckBox[numberoflights];
	private boolean hardcore = false;
	private GameTime gametime;
	private MediaPlayer mp;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_game);
		for (int i = 0; i < numberoflights; i++) {
			lights[i] = (CheckBox) findViewById(getid("light" + (i + 1)));
			lights[i].setChecked(true);
		}
		setHardcodeListener(hardcore);
		gametime = new GameTime(120000, 100, lights,
				(TextView) findViewById(R.id.time), this);

		gametime.start();

		PlaySound();

	}

	private int getid(String name) {
		if (name.equals("light1")) {
			return R.id.light1;
		}
		if (name.equals("light2")) {
			return R.id.light2;
		}
		if (name.equals("light3")) {
			return R.id.light3;
		}
		if (name.equals("light4")) {
			return R.id.light4;
		}
		if (name.equals("light5")) {
			return R.id.light5;
		}
		if (name.equals("light6")) {
			return R.id.light6;
		}
		if (name.equals("light7")) {
			return R.id.light7;
		}
		if (name.equals("light8")) {
			return R.id.light8;
		}
		if (name.equals("light9")) {
			return R.id.light9;
		}
		if (name.equals("light10")) {
			return R.id.light10;
		}
		if (name.equals("light11")) {
			return R.id.light11;
		}
		if (name.equals("light12")) {
			return R.id.light12;
		}
		return 0;

	}

	private void PlaySound() {
		new Thread() {
			public void run() {
				mp = MediaPlayer.create(getApplicationContext(),
						R.raw.gamesound);
				mp.start();
			}
		}.start();
	}

	public void stop(long time) {
		mp.stop();
		calculatepoints();
	}

	private void calculatepoints() {
		// TODO Auto-generated method stub
		
	}

	public void setHardcodeListener(boolean hardcore) {
		if (hardcore) {
			for (int i = 0; i < lights.length; i++) {
				lights[i].setOnClickListener(new OnClickListener() {

					@Override
					public void onClick(View v) {
						for (int k = 0; k < lights.length; k++)
							if (lights[k].isChecked() && v == lights[k]) {
								lights[k].setChecked(false);
							}
					}
				});
			}
		}
	}

}
