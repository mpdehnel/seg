package com.vectorone;

import com.data.DataClass;
import com.data.SpinnerListener;
import com.data.User;

import android.app.Activity;
import android.content.pm.ActivityInfo;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Bundle;
import android.util.Log;
import android.view.Window;
import android.widget.GridLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;

public class SettingsActivity extends Activity {

	private RelativeLayout relativelayout;
	private TextView label_unit;
	private TextView lable_team;
	private TextView lable_maxdistance;
	private Spinner spinner_unit;
	private Spinner spinner_team;
	private Spinner spinner_distance;
	private SpinnerListener spinner_listener;

	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_settings);

		initdatafields();
		setupListener();
		setupfont();
		setupbackgroundimage();
		setupdatafields();

	}

	private void setupfont() {
		Typeface font = Typeface
				.createFromAsset(getAssets(), "fonts/bebas.ttf");
		int textcolor = Color.parseColor("#DECD87");
		int buttoncolor = Color.parseColor("#45250F");
		float textsize = 22;

		label_unit.setTextSize(textsize);
		label_unit.setTextColor(textcolor);
		label_unit.setTypeface(font);

		lable_maxdistance.setTextSize(textsize);
		lable_maxdistance.setTextColor(textcolor);
		lable_maxdistance.setTypeface(font);

		lable_team.setTextSize(textsize);
		lable_team.setTextColor(textcolor);
		lable_team.setTypeface(font);
		
		spinner_distance.

	}

	private void setupListener() {
		spinner_distance.setOnItemSelectedListener(spinner_listener);
		spinner_team.setOnItemSelectedListener(spinner_listener);
		spinner_unit.setOnItemSelectedListener(spinner_listener);
	}

	private void setupbackgroundimage() {

		relativelayout.setBackgroundDrawable(getResources().getDrawable(
				R.drawable.background));
	}

	private void setupdatafields() {
		User user = DataClass.user;
		if (user.getSettings_maxdistance() != null
				&& user.getSettings_unit() != null) {
			int pos = 0;
			if (user.getSettings_unit().equals("m/km")) {
				spinner_unit.setSelection(0);
				pos = getPosinArray(
						getResources().getStringArray(R.array.DistanceinM),
						user.getSettings_maxdistance());

			} else {
				spinner_unit.setSelection(1);
				pos = getPosinArray(
						getResources().getStringArray(R.array.Distanceinft),
						user.getSettings_maxdistance());

			}
			spinner_distance.setSelection(pos);
		}
		if (user.getSettings_team() != null) {
			spinner_team.setSelection(getPosinArray(getResources()
					.getStringArray(R.array.Team), user.getSettings_team()));
		}

	}

	private int getPosinArray(String[] data, String date) {
		for (int i = 0; i < data.length; i++) {
			if (data[i] == date) {
				return i;
			}
		}
		return 0;
	}

	private void initdatafields() {
		relativelayout = (RelativeLayout) findViewById(R.id.settings_layout);
		label_unit = (TextView) findViewById(R.id.Unit);
		lable_team = (TextView) findViewById(R.id.team_lable);
		lable_maxdistance = (TextView) findViewById(R.id.max_distance);
		spinner_unit = (Spinner) findViewById(R.id.spinner_unit);
		spinner_team = (Spinner) findViewById(R.id.spinner_team);
		spinner_distance = (Spinner) findViewById(R.id.spinner_distance);
		spinner_listener = new SpinnerListener(DataClass.user);
	}
}
