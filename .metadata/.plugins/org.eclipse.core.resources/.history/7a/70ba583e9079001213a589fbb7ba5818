package com.vectorone;

import javax.security.auth.callback.PasswordCallback;

import com.data.Registrationsverify;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.graphics.Color;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class AddNewUserActivity extends Activity {

	private LinearLayout layout;
	private TextView[] labels = new TextView[8];
	private EditText[] entrys = new EditText[7];
	private Button createButton;
	private Button cancelButton;
	private final int username=0;
	private final int nickname=1;
	private final int email=2;
	private final int postcode=3;
	private final int date=4;
	private final int password=5;
	private final int passwordconfirm=6;
	
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
		setContentView(R.layout.activity_addnewuser);

		initdatafields();
		setupListener();
		setupfont();
		setupbackgroundimage();
	}

	private void setupbackgroundimage() {
		layout.setBackgroundDrawable(getResources().getDrawable(
				R.drawable.background));
		Drawable buttonimage = getResources().getDrawable(
				R.drawable.buttonmedium);
		Drawable textfieldimage = getResources().getDrawable(
				R.drawable.textentry);
		createButton.setBackgroundDrawable(buttonimage);
		cancelButton.setBackgroundDrawable(buttonimage);
		for (int i = 0; i < entrys.length; i++) {
			entrys[i].setBackgroundDrawable(textfieldimage);
		}

	}

	private void setupfont() {
		Typeface font = Typeface
				.createFromAsset(getAssets(), "fonts/bebas.ttf");
		int textcolor = Color.parseColor("#DECD87");
		int buttoncolor = Color.parseColor("#45250F");
		float textsize = 22;
		for (int i = 0; i < entrys.length-2; i++) {
			entrys[i].setTypeface(font);
			entrys[i].setTextSize(textsize);
			entrys[i].setTextColor(textcolor);
		}
		entrys[5].setTextSize(textsize);
		entrys[6].setTextSize(textsize);
		for (int i = 0; i < labels.length; i++) {
			labels[i].setTypeface(font);
			labels[i].setTextSize(textsize);
			labels[i].setTextColor(textcolor);
		}
		
		cancelButton.setTextColor(buttoncolor);
		cancelButton.setTypeface(font);
		cancelButton.setTextSize(textsize);
		createButton.setTextColor(buttoncolor);
		createButton.setTypeface(font);
		createButton.setTextSize(textsize);
		
	}

	private void setupListener() {
		cancelButton.setOnClickListener(clickhandler);
		createButton.setOnClickListener(clickhandler);
	}

	private void initdatafields() {
		layout = (LinearLayout) findViewById(R.id.AddNewUser);
		labels[0] = (TextView) findViewById(R.id.UsernameLabel);
		labels[1] = (TextView) findViewById(R.id.NicknameAddNewUser);
		labels[2] = (TextView) findViewById(R.id.passwordAddNewUser);
		labels[3] = (TextView) findViewById(R.id.PasswordConfirm);
		labels[4] = (TextView) findViewById(R.id.Email);
		labels[5] = (TextView) findViewById(R.id.PostCode);
		labels[6] = (TextView) findViewById(R.id.DateOfBirth);
		labels[7] = (TextView) findViewById(R.id.format);
		createButton = (Button) findViewById(R.id.CreateUser);
		cancelButton = (Button) findViewById(R.id.Cancel);

		entrys[0] = (EditText) findViewById(R.id.UsernameInput);
		entrys[1] = (EditText) findViewById(R.id.NicknameInput);
		entrys[2] = (EditText) findViewById(R.id.EmailInput);
		entrys[3] = (EditText) findViewById(R.id.PostCodeInput);
		entrys[4] = (EditText) findViewById(R.id.Date);
		entrys[5] = (EditText) findViewById(R.id.PasswordInput);
		entrys[6] = (EditText) findViewById(R.id.PasswordInputConfirm);

	}
	
	private OnClickListener clickhandler= new OnClickListener() {
		
		@Override
		public void onClick(View v) {
			Intent intent;
			Registrationsverify validator=new Registrationsverify();
			if(v==cancelButton){
				intent= new Intent(getApplicationContext(), MainLogInActivity.class);
				startActivity(intent);
			}
			if(v==createButton){
				if(validator.exsistUsername(entrys[username])){
					Toast.makeText(getApplicationContext(), "Username already exsist", Toast.LENGTH_SHORT).show();
				}if(!validator.isProperEmail(entrys[email])){
					Toast.makeText(getApplicationContext(), "No proper Email", Toast.LENGTH_SHORT).show();
				}if(!validator.checkPasswordsAreEqual(entrys[password],entrys[passwordconfirm])){
					Toast.makeText(getApplicationContext(), "Passwords are not equal", Toast.LENGTH_SHORT).show();
				}if(!validator.isProperDate(entrys[date])){
					Toast.makeText(getApplicationContext(), "wrong date format", Toast.LENGTH_SHORT).show();
				}if(!validator.isProperPostCode(entrys[postcode])){
					Toast.makeText(getApplicationContext(), "wrong postcode", Toast.LENGTH_SHORT).show();
				}
				
			}
		}
	};
}
